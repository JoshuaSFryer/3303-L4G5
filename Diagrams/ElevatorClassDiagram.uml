@startuml
package ElevatorSubsystem{
  class Elevator{
    ~ goToFloor(): void
    - sendStateToScheduler(): boolean
  }

  interface ElevatorState  
  class ElevatorStateOne
  class ElevatorStateTwo
  class ElevatorStateThree

  interface Buttons{
    + selectFloor(int floor): boolean
  }
  interface Motor{
    ~ moveUp(): boolean
    ~ moveDown(): boolean
    ~ stop(): boolean
  }
  interface FloorSensor{
    - getFloor(): int
  }
  interface Lights{
    - currentLights: boolean[]
    + updateLights(boolean[] floorStatusList)
  }
  interface Door{
    - doorState: boolean
    +openDoors(): boolean
    +closeDoors(): boolean
  }
  class ElevatorCommunicator{
    + goToFloor(int floor)
    - sendStateToSchedulerOnChange(ElevatorState, clickedButtons)
  }

  class ElevatorSimulatorCommunicator{
    + simulateFloorButtonClick(int floor)
  }


  Elevator o-right-> ElevatorState
  Elevator *-- Buttons
  Elevator *-- Motor
  Elevator *-- Door
  Elevator *-- Lights
  Elevator *-- FloorSensor

  ElevatorSimulatorCommunicator -- Buttons
  ElevatorCommunicator -- Elevator


  ElevatorState <|-down- ElevatorStateOne
  ElevatorState <|-down- ElevatorStateTwo
  ElevatorState <|-down- ElevatorStateThree
}
@enduml
